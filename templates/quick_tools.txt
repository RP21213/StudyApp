<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quick Tools - {{ hub.name }}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&family=Lora:wght@400;600&display=swap" rel="stylesheet">
    <!-- Reusing the same CSS from hub.html for consistency -->
    <style>
        :root {
            --primary-color: #4f46e5; --primary-hover: #4338ca; --primary-light: #eef2ff;
            --danger-color: #ef4444; --danger-hover: #dc2626; --success-color: #10b981;
            --text-main: #1f2937; --text-secondary: #6b7280; --border-color: #e5e7eb;
            --background-body: #f4f5f7; --background-card: #ffffff;
            --card-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.07), 0 2px 4px -2px rgb(0 0 0 / 0.07);
        }
        body { font-family: 'Poppins', sans-serif; background-color: var(--background-body); margin: 0; padding: 2rem; color: var(--text-main); }
        h1, h2, h3, h4, h5, .button { font-family: 'Poppins', sans-serif; }
        .container { max-width: 1400px; margin: 0 auto; display: grid; grid-template-columns: 1fr 350px; gap: 2rem; align-items: start; }
        .button { display: inline-flex; align-items: center; justify-content: center; gap: 0.5rem; text-decoration: none; font-weight: 600; padding: 0.625rem 1rem; border-radius: 8px; border: 1px solid transparent; transition: all 0.2s ease-in-out; cursor: pointer; font-size: 0.9rem; }
        .button-secondary { background-color: var(--background-card); border-color: var(--border-color); color: var(--text-secondary); }
        .main-content { display: flex; flex-direction: column; gap: 2rem; }
        .content-card { background-color: var(--background-card); border-radius: 12px; border: 1px solid #f3f4f6; box-shadow: var(--card-shadow); padding: 1.5rem 2rem; }
        .page-header { display: flex; justify-content: space-between; align-items: center; }
        .page-header h1 { font-size: 1.875rem; font-weight: 700; margin: 0; }
        .disabled { opacity: 0.6; pointer-events: none; user-select: none; }
        .feature-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: 1.5rem; }
        .feature-card { background-color: var(--background-card); border: 1px solid #f3f4f6; border-radius: 12px; padding: 1.5rem; text-align: left; cursor: pointer; display: flex; flex-direction: column; gap: 1rem; transition: all 0.2s; box-shadow: var(--card-shadow);}
        .feature-card:hover { transform: translateY(-5px) scale(1.02); box-shadow: var(--card-shadow-hover); border-color: var(--primary-color); }
        .feature-icon-wrapper { width: 48px; height: 48px; border-radius: 8px; display: flex; align-items: center; justify-content: center; }
        .feature-text h4 { margin: 0 0 0.25rem 0; font-size: 1.1rem; font-weight: 600; color: var(--text-main); }
        .feature-text p { margin: 0; font-size: 0.9rem; color: var(--text-secondary); line-height: 1.5; font-family: 'Poppins', sans-serif; }
        .feature-arrow { margin-top: auto; align-self: flex-end; font-size: 1.5rem; color: var(--text-secondary); transition: color 0.2s, transform 0.2s; }
        .feature-card:hover .feature-arrow { color: var(--primary-color); transform: translateX(4px); }
        .files-panel { background-color: #f9fafb; border-radius: 12px; border: 1px solid var(--border-color); box-shadow: var(--card-shadow); padding: 1.5rem; position: sticky; top: 2rem; }
        .sidebar-section { margin-bottom: 2rem; } .sidebar-section:last-child { margin-bottom: 0; }
        .files-panel h3 { font-size: 1.125rem; margin: 0 0 1rem 0; padding-bottom: 0.75rem; border-bottom: 1px solid var(--border-color); }
        .file-list .file-item { display: flex; justify-content: space-between; align-items: center; padding: 0.625rem 0.5rem; border-radius: 8px; transition: background-color 0.2s; margin-bottom: 0.25rem; }
        .file-list .file-item:hover { background-color: #f3f4f6; }
        .file-item .file-info { display: flex; align-items: center; gap: 0.75rem; flex-grow: 1; cursor: pointer; overflow: hidden; }
        .file-info span { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
        .file-item input[type="checkbox"] { width: 1rem; height: 1rem; accent-color: var(--primary-color); flex-shrink: 0; }
        .loading-card { display: flex; align-items: center; gap: 1.5rem; padding: 1.5rem; background-color: var(--primary-light); border: 1px solid var(--primary-color); border-radius: 12px; margin-bottom: 2rem; }
        .spinner { border: 4px solid rgba(79, 70, 229, 0.2); border-top: 4px solid var(--primary-color); border-radius: 50%; width: 32px; height: 32px; animation: spin 1s linear infinite; flex-shrink: 0; }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        .loading-text h4 { margin: 0 0 0.25rem 0; color: var(--text-main); }
        .loading-text p { margin: 0; color: var(--primary-color); }
    </style>
</head>
<body>
    <div class="container">
        <main class="main-content">
            <div class="content-card">
                <div class="page-header">
                    <h1>Quick Tools</h1>
                    <a href="{{ url_for('hub_page', hub_id=hub.id) }}" class="button button-secondary">Back to Hub Workflows</a>
                </div>
            </div>

            <div id="loading-status-container"></div>

            <div class="content-card" id="quick-tools-container">
                 <p style="text-align:center; color: var(--text-secondary);">Select one or more documents, then choose a tool to generate a single resource.</p>
                 <div class="feature-grid">
                    <button type="button" class="feature-card quick-tool-btn" value="notes">
                        <div class="feature-icon-wrapper" style="background-color: #e0e7ff;"><svg style="color: #4338ca;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline></svg></div>
                        <div class="feature-text"><h4>Generate Notes</h4><p>Create a single set of interactive notes.</p></div>
                        <span class="feature-arrow">→</span>
                    </button>
                    <button type="button" class="feature-card quick-tool-btn" value="flashcards">
                        <div class="feature-icon-wrapper" style="background-color: #dcfce7;"><svg style="color: #166534;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><rect x="2" y="7" width="20" height="15" rx="2" ry="2"></rect><polyline points="17 2 12 7 7 2"></polyline></svg></div>
                        <div class="feature-text"><h4>Generate Flashcards</h4><p>Create a single deck of flashcards.</p></div>
                        <span class="feature-arrow">→</span>
                    </button>
                    <button type="button" class="feature-card quick-tool-btn" value="quiz">
                        <div class="feature-icon-wrapper" style="background-color: #fef9c3;"><svg style="color: #854d0e;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"></path><path d="m9 12 2 2 4-4"></path></svg></div>
                        <div class="feature-text"><h4>Generate Quiz</h4><p>Create a single practice quiz.</p></div>
                        <span class="feature-arrow">→</span>
                    </button>
                    <button type="button" class="feature-card quick-tool-btn" value="exam">
                        <div class="feature-icon-wrapper" style="background-color: #ffe4e6;"><svg style="color: #9f1239;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line></svg></div>
                        <div class="feature-text"><h4>Create Mock Exam</h4><p>Simulate exam conditions with a timed test.</p></div>
                        <span class="feature-arrow">→</span>
                    </button>
                    <button type="button" class="feature-card quick-tool-btn" value="analyse">
                        <div class="feature-icon-wrapper" style="background-color: #e0f2fe;"><svg style="color: #0369a1;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M3 3v18h18"></path><path d="M18.7 8.7l-7.2 7.2-2.5-2.5L3 17"></path></svg></div>
                        <div class="feature-text"><h4>Analyze Papers</h4><p>Identify trends from past exam papers.</p></div>
                        <span class="feature-arrow">→</span>
                    </button>
                    <button type="button" class="feature-card quick-tool-btn" value="heatmap">
                        <div class="feature-icon-wrapper" style="background-color: #fff7ed;"><svg style="color: #c2410c;" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.362-3.797z" /><path stroke-linecap="round" stroke-linejoin="round" d="M15.362 5.214C14.268 5.474 13.166 5.8 12 6.202c-1.166-.402-2.268-.728-3.362-1.012A8.25 8.25 0 0012 21v-7.784c1.558 0 3.04.42 4.362 1.154a8.25 8.25 0 00-1.002-8.156z" /></svg></div>
                        <div class="feature-text"><h4>Topic Heatmap</h4><p>Visualize the most recurring topics.</p></div>
                        <span class="feature-arrow">→</span>
                    </button>
                </div>
            </div>
        </main>
        
        <aside class="files-panel" id="files-panel-sidebar">
             <div class="sidebar-section">
                <h3>Documents</h3>
                <div class="file-list">
                    {% for file in hub.files %}
                    <div class="file-item">
                        <label class="file-info" for="file-{{ loop.index }}">
                            <input type="checkbox" class="file-checkbox" name="selected_files" value="{{ file.path }}" id="file-{{ loop.index }}">
                            <span class="file-icon"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline></svg></span>
                            <span>{{ file.name }}</span>
                        </label>
                    </div>
                    {% else %}
                    <p style="color: var(--text-secondary); text-align: center; padding: 1rem 0;">No documents in this hub.</p>
                    {% endfor %}
                </div>
            </div>
        </aside>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const quickToolsContainer = document.getElementById('quick-tools-container');
        const sidebarPanel = document.getElementById('files-panel-sidebar');
        const loadingContainer = document.getElementById('loading-status-container');
        const hubId = '{{ hub.id }}';
        let isAITaskRunning = false;

        document.querySelectorAll('.quick-tool-btn').forEach(button => {
            button.addEventListener('click', async (e) => {
                if (isAITaskRunning) return;

                const toolName = e.currentTarget.value;
                const selectedFiles = Array.from(sidebarPanel.querySelectorAll('.file-checkbox:checked')).map(cb => cb.value);

                if (selectedFiles.length === 0) {
                    alert("Please select at least one document to use this tool.");
                    return;
                }

                isAITaskRunning = true;
                quickToolsContainer.classList.add('disabled');
                sidebarPanel.classList.add('disabled');
                loadingContainer.innerHTML = `<div class="loading-card"><div class="spinner"></div><div class="loading-text"><h4>Generating ${toolName.charAt(0).toUpperCase() + toolName.slice(1)}...</h4><p>Please wait, this can take a moment.</p></div></div>`;
                
                try {
                    const response = await fetch(`/hub/${hubId}/run_async_tool`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ tool: toolName, selected_files: selectedFiles })
                    });
                    const result = await response.json();
                    if (result.success) {
                        window.location.href = result.redirect_url;
                    } else {
                        throw new Error(result.message);
                    }
                } catch (error) {
                    alert(`An error occurred: ${error.message}`);
                    isAITaskRunning = false;
                    loadingContainer.innerHTML = '';
                    quickToolsContainer.classList.remove('disabled');
                    sidebarPanel.classList.remove('disabled');
                }
            });
        });
    });
    </script>
</body>
</html>